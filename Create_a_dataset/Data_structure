The data type structures of R include scalar, vector, matrix, array, data frame and list.

# vector
one-dimentional array for storing numeric, character or logical data ~ c()
* data in a single vector must have the same type or schema

# matrix
a two-dimentional array (numeric, character, logical data)
general format:
mymatrix <- matrix (vector, nrow=number_of_rows, ncol=number_of_colums, byrow=logical_value, dimname=list(char_vector_rownames, char_vector_colnames))
X[i,] is ith row
X[,j] is the jth column

# array
similar to matrix, but the dimensions can be greater than 2
create a array: myarray <- array (vector, dementions, dimnames)
vector contains the data in the array; dimensions is a numeric vector giving the maxium value of the subscripts of each dimension; dimnames is optimal, 
a list of dimension name labels

# dataframe
function to create the dataframe: mydata <- data.frame (col1, col2, col3,.....)
* the schema of each coloumn of data must be unique
* $ used to select a variable in a given dataframe

1)attach(): add a data frame to R's search path
  detach(): remove the dataframe from the search path
2)with(): before the dataframe is attached, there is already an object with the same name in the environment, in this case, the original objective takes precedence.

# factor: catagorical (nominal) and ordinal categorical (ordinal) variables
if it represents an ordinal variable, you need to specify "ordered = TRUE" for the function "factor()"
for character vectors, factor level are created alphabetically default, you can use the "levels="option to override the default order

